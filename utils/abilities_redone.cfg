#textdomain wesnoth-Dawn_of_Thunder

#define SPECIAL_NOTES_BEACHHOME
_ "This unit is at home on the beach, and can move undetected in any sandy area or oasis." #enddef

#define ABILITY_BEACHHOME
    [hides]
        id=Beach Home
        name= _ "beach home"
        female_name= _ "beach home"
        description= _ "This unit loves the sand and the sea, not to mention lives in it, thus allowing it to hide in any sandy area or oasis."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=D*^*, Hd, D*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define SPECIAL_NOTES_SHALLOWSUB
_ "This unit can move unseen in shallow and deep water, requiring little air from the surface." #enddef

#define ABILITY_SHALLOWSUB
    [hides]
        id=AE_shallow_submerge
        name= _ "shallow submerge"
        female_name= _ "shallow submerge"
        description= _ "This ability allows the unit to hide in shallow water as well as deep water."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Ww,Wo
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ABILITY_WOOD_HEALING
    [regenerate]
        [filter_self]
            [filter_location]
                terrain=*^F*
                [not]
                    terrain=*^Fpa,*^Fda,*^Fma,*^Fpa,*^Fda,*^Fma
                [/not]
            [/filter_location]
        [/filter_self]
        value=8
        affect_self="yes"
        name=_ "burn wood"
        description= _ "The unit will heal itself 8 HP per turn by absorbing fire from burning dry forests (non-ice). The burning destroys the forest in the process."
    [/regenerate]
#enddef

#define SPECIAL_NOTES_WOOD_HEALING
_ "This unit regenerates 8 HP per turn by absorbing energy from burning forests. Any time this unit starts a turn on a dry forest (non-snow), it burns the trees, leaving none left."#enddef

#define FIRE_BURN_WOOD_MACRO TYPE
    [event]
        name=side turn
        first_time_only=no
        [store_unit]
            [filter]
                type={TYPE}
                side=$side_number
                [filter_location]
                    terrain=*^F*
                    [not]
                        terrain=*^Fpa,*^Fda,*^Fma,*^Fpa,*^Fda,*^Fma
                    [/not]
                [/filter_location]
            [/filter]
            variable=temp_units
        [/store_unit]
        {FOREACH temp_units i}
            {VARIABLE temp_units[$i].variables.pre_burn_hp $temp_units[$i].hitpoints}
            [unstore_unit]
                variable=temp_units[$i]
            [/unstore_unit]
        {NEXT i}
        {CLEAR_VARIABLE temp_units}
    [/event]
    [event]
        name=turn refresh
        first_time_only=no
        [store_locations]
            terrain=*^F*
            [not]
                terrain=*^Fpa,*^Fda,*^Fma,*^Fpa,*^Fda,*^Fma
            [/not]
            [filter]
                type={TYPE}
                side=$side_number
            [/filter]
            variable=temp_locs
        [/store_locations]
        # TODO: getting an error in the "if curr_hp > pre_hp then" line, looks like pre_hp is nil?
        [lua]
            code = <<
helper = wesnoth.require "lua/helper.lua"
local locs = helper.get_variable_array("temp_locs")
for i, l in ipairs(locs) do
    local unit = wesnoth.get_units({ x = l.x, y = l.y })[1]
    local uvars = helper.get_child(unit.__cfg, "variables")
    local pre_hp = uvars.pre_burn_hp
    local curr_hp = unit.hitpoints

    -- Did the unit heal?
    if pre_hp ~= nil and curr_hp > pre_hp then
        t = string.gsub(l.terrain, "(%a+)%^%a+", "%1")
        wesnoth.set_terrain(l.x, l.y, t)
    end
    helper.modify_unit({ x = l.x, y = l.y }, { ["variables.pre_burn_hp"] = nil})
end
            >>
        [/lua]
        {CLEAR_VARIABLE temp_locs}
    [/event]
#enddef

#define ABILITY_FIRE_HEALING HP
    [regenerate]
        [filter_self]
            [filter_location]
                terrain=Ql*^*
            [/filter_location]
        [/filter_self]
        value={HP}
        affect_self="yes"
        name=_ "absorb lava"
        description= _ "The unit will heal itself per turn on lava terrain (Amount varies per unit)."
    [/regenerate]
#enddef

#define SPECIAL_NOTES_FIRE_HEALING HP
_ "This unit regenerates {HP} HP per turn when on lava terrain."#enddef

#define ABILITY_EXTRA_HEAL_12
    [heals]
        value=12
        id=healing
        affect_allies=yes
        name= _ "heals +12"
        female_name= _ "female^heals +12"
        description= _ "This unit combines herbal remedies with magic to heal units more quickly than is normally possible on the battlefield.
A unit cared for by this healer may heal up to 12 HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer and must seek the care of a village or a unit that can cure."
        affect_self=no
        poison=slowed
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
#enddef

#define ABILITY_TREEWALK
    [teleport]
        id=treewalk
        name=_"treewalk"
        female_name=_"female^treewalk"
        description=_"This unit may teleport between any two great trees using one of its moves."
        [tunnel]
            id=tree_teleport
            [source]
                terrain=*^Fet,*^Fetd
                [not]
                    [filter]
                        [not]
                            id=$teleport_unit.id
                        [/not]
                    [/filter]
                [/not]
            [/source]
            [target]
                terrain=*^Fet,*^Fetd
                [not]
                    [filter]
                    [/filter]
                [/not]
            [/target]
            [filter]
                ability=treewalk
            [/filter]
        [/tunnel]
    [/teleport]
#enddef

#define ABILITY_PHOTOREGENERATES
    [regenerate]
        id=regenerates_day
        name= _ "photoregenerates"
        female_name= _ "female^photoregenerates"
        description= _ "The unit will heal itself 8 HP per turn at day and cure itself. This unit will heal itself 4 HP at twilight."
        affect_self=yes
        value=8
        poison=cured
        [filter]
            [filter_location]
                time_of_day=lawful
            [/filter_location]
        [/filter]
    [/regenerate]
    [regenerate]
        id=regenerates_twilight
        affect_self=yes
        value=4
        [filter]
            [filter_location]
                time_of_day=neutral
            [/filter_location]
        [/filter]
    [/regenerate]
#enddef

#define ABILITY_STRENGTH_OF_DARKNESS
    [regenerate]
        id=regenerates_night
        name= _ "strength of darkness"
        female_name= _ "female^strength of darkness"
        description= _ "The unit will heal itself 8 HP per turn at night and cure itself. This unit will heal itself 4 HP at twilight."
        affect_self=yes
        value=8
        poison=cured
        [filter]
            [filter_location]
                time_of_day=chaotic
            [/filter_location]
        [/filter]
    [/regenerate]
    [regenerate]
        id=regenerates_twilight
        affect_self=yes
        value=4
        [filter]
            [filter_location]
                time_of_day=neutral
            [/filter_location]
        [/filter]
    [/regenerate]
#enddef

#define ABILITY_STRENGTH_OF_DARKNESS_PLUS_24
    [regenerate]
        id=regenerates_night
        name= _ "strength of darkness"
        female_name= _ "female^strength of darkness"
        description= _ "The unit will heal itself 24 HP per turn at night and cure itself. This unit will heal itself 12 HP at twilight."
        affect_self=yes
        value=24
        poison=cured
        [filter]
            [filter_location]
                time_of_day=chaotic
            [/filter_location]
        [/filter]
    [/regenerate]
    [regenerate]
        id=regenerates_twilight
        affect_self=yes
        value=12
        [filter]
            [filter_location]
                time_of_day=neutral
            [/filter_location]
        [/filter]
    [/regenerate]
#enddef

#define __ABILITY_TSTRING_TERROR
    name= _ "terror"
    description= _ "This unit can frighten enemy units that are next to it, making them fight worse.
Adjacent enemy units of lower level will do less damage in battle. When an enemy unit of the same or lower level is adjacent and engages in combat, its attacks do 15% less damage times the difference in their levels + 15%."
#enddef

#define ABILITY_TERROR_LEVEL_1
    [leadership]
        id=terror
        value=-30
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_TERROR_LEVEL_2
    [leadership]
        id=terror
        value=-45
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-30
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_TERROR_LEVEL_3
    [leadership]
        id=terror
        value=-60
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-45
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-30
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_SYLVAN_SPARK
    [regenerate]
        value=5
        id=sylvan_spark
        name= _ "sylvan spark"
        description= _ "While in vegetated terrains, the unit will heal itself 5 hp per turn. If it is poisoned, it will remove the poison instead of healing."
        name_inactive= _ "sylvan spark"
        description_inactive= _ "While in vegetated terrains, the unit will heal itself 5 hp per turn. If it is poisoned, it will remove the poison instead of healing."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=*^F*, *^Uf, *^Ufi
            [/filter_location]
        [/filter_self]
        poison=cured
    [/regenerate]
#enddef

#define ABILITY_REGENERATES_PLUS_24
    [regenerate]
        value=24
        id=regenerates_plus_24
        name= _ "regenerates"
        female_name= _ "female^regenerates"
        description= _ "This unit will heal itself 24 HP per turn. If it is poisoned, it will remove the poison instead of healing."
        affect_self=yes
        poison=cured
    [/regenerate]
#enddef

#define ABILITY_WEREWOLF_LYCANTHROPY
    [dummy]
        id=lycanthropy
        name= _ "lycanthropy"
        description= _ "This unit can transform into a wolf and back to being a human at will. This is not dependent from day and night."
    [/dummy]
#enddef

#define ABILITY_WEREWOLF_LYCANTHROPY_TRANSFORMATION_EVENT
    #I believe that this ability only works with one unit with such an ability in the game. If you want to use it for multiple units at once, be sure to modify it to fit your needs
    [event]
        name=side turn
        first_time_only=no
        [set_menu_item]
            id=werewolf_transformation
            description= _ "transform"
            image=misc/wolficon.png
            [show_if]
                [have_unit]
                    ability=lycanthropy
                    x,y=$x1,$y1
                    side=$side_number
                [/have_unit]
            [/show_if]
            [command]
                [if]
                    [have_unit]
                        race=human-northguard
                        x,y=$x1,$y1
                    [/have_unit]
                    [then]
                        [if]
                            [variable]
                                name=first_transformation
                                equals=no
                            [/variable]
                            [then]
                                [set_variable]
                                    name=to_transform_wolf.moves
                                    value=$unit.moves
                                [/set_variable]
                                [set_variable]
                                    name=to_transform_wolf.hitpoints
                                    value=$unit.hitpoints
                                [/set_variable]
                                [store_unit]
                                    [filter]
                                        x,y=$x1,$y1
                                    [/filter]
                                    variable=to_transform_human
                                    kill=yes
                                [/store_unit]
                                [unstore_unit]
                                    variable=to_transform_wolf
                                    x,y=$x1,$y1
                                [/unstore_unit]
                            [/then]
                            [else]
                                [store_unit]
                                    [filter]
                                        x,y=$x1,$y1
                                    [/filter]
                                    variable=to_transform_human
                                    kill=yes
                                [/store_unit]
                                [unit]
                                    type=Wolf
                                    side=$side_number
                                    x,y=$x1,$y1
                                    id=$to_transform_human.id
                                    name=$to_transform_human.name
                                    random_traits=no
                                    moves=$to_transform_human.moves
                                    attacks_left=$to_transform_human.attacks_left
                                    profile=portraits/wolf.png
                                    canrecruit=$to_transform_human.canrecruit
                                    overlays=$to_transform_human.overlays
                                    extra_recruit=$to_transform_human.extra_recruit
                                    # FIXME: wmllint warns about this:
                                    ellipse=$to_transform_human.ellipse # wmllint: ignore
                                    [modifications]
                                        # FIXME: validator complains here:
                                        traits=$to_transform_human.traits
                                        [object]
                                            [effect]
                                                apply_to=new_ability
                                                [abilities]
                                                    {ABILITY_WEREWOLF_LYCANTHROPY}
                                                [/abilities]
                                            [/effect]
                                        [/object]
                                    [/modifications]
                                    facing=$to_transform_human.facing
                                [/unit]
                                [modify_unit]
                                    [filter]
                                        id=$to_transform_human.id
                                    [/filter]
                                    [event]
                                        name=post advance
                                        first_time_only=no
                                        [if]
                                            [variable]
                                                name=to_transform_human.hitpoints
                                                greater_than=$unit.max_hitpoints
                                            [/variable]
                                            [then]
                                                [modify_unit]
                                                    [filter]
                                                        id=$unit.id
                                                    [/filter]
                                                    hitpoints=$unit.max_hitpoints
                                                [/modify_unit]
                                            [/then]
                                            [else]
                                                [modify_unit]
                                                    [filter]
                                                        id=$unit.id
                                                    [/filter]
                                                    hitpoints=$to_transform_human.max_hitpoints
                                                [/modify_unit]
                                            [/else]
                                        [/if]
                                    [/event]
                                [/modify_unit]
                                [set_variable]
                                    name=first_transformation
                                    value=no
                                [/set_variable]
                            [/else]
                        [/if]
                    [/then]
                    [else]
                        [if]
                            [variable]
                                name=$unit.moves
                                greater_than=$to_transform_human.max_moves
                            [/variable]
                            [then]
                                [set_variable]
                                    name=to_transform_human.moves
                                    value=$to_transform_human.max_moves
                                [/set_variable]
                            [/then]
                            [else]
                                [set_variable]
                                    name=to_transform_human.moves
                                    value=$unit.moves
                                [/set_variable]
                            [/else]
                        [/if]
                        [if]
                            [variable]
                                name=$unit.hitpoints
                                greater_than=$to_transform_human.max_hitpoints
                            [/variable]
                            [then]
                                [set_variable]
                                    name=to_transform_human.hitpoints
                                    value=$to_transform_human.max_hitpoints
                                [/set_variable]
                            [/then]
                            [else]
                                [set_variable]
                                    name=to_transform_human.hitpoints
                                    value=$unit.hitpoints
                                [/set_variable]
                            [/else]
                        [/if]
                        [set_variable]
                            name=to_transform_human.attacks_left
                            value=$unit.attacks_left
                        [/set_variable]
                        [store_unit]
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                            variable=to_transform_wolf
                            kill=yes
                        [/store_unit]
                        [unstore_unit]
                            variable=to_transform_human
                            x,y=$x1,$y1
                        [/unstore_unit]
                    [/else]
                [/if]
            [/command]
        [/set_menu_item]
    [/event]
#enddef

#define ABILITY_SYLVAN_STRENGTH
    [leadership]
        id=sylvan_strength
        value=25
        cumulative=yes
        name= _ "sylvan strength"
        female_name= _ "female^sylvan strength"
        description= _ "This presence of this unit on the battlefield strengthens all units that are deeply connected with the faerie world.

Adjacent own units that are either elves, faeries or woses will do more damage in battle. When a unit adjacent to, with a race that is either elves, faeries or woses, and on the same side as a unit with sylvan strength engages in combat, its attacks do 25% more damage."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                race=elf, wose, fairy, elf2
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_DIG
    [dummy]
        id=dig
        name= _ "dig"
        description= _ "This unit is able to dig itself through cave walls. For the cost of four mp it can change the terrain of an adjacent cave wall to cave ground."
    [/dummy]
#enddef

#define MOVES_NO_LESS_THAN_3
    [and]
        [not]
            [filter_wml]
                moves=3
            [/filter_wml]
        [/not]
    [/and]
    [and]
        [not]
            [filter_wml]
                moves=2
            [/filter_wml]
        [/not]
    [/and]
    [and]
        [not]
            [filter_wml]
                moves=1
            [/filter_wml]
        [/not]
    [/and]
    [and]
        [not]
            [filter_wml]
                moves=0
            [/filter_wml]
        [/not]
    [/and]
#enddef

#define ABILITY_DIG_EVENT
    [event]
        name=side turn
        first_time_only=no

        [set_menu_item]
            [show_if]
                [have_location]
                    terrain=Xu*
                    x,y=$x1,$y1
                    [filter_adjacent_location]
                        [filter]
                            side=$side_number
                            [and]
                                type=DoT_Dwarvish_Miner
                            [/and]
                            [and]
                                ability=dig
                            [/and]
                            [and]
                                {MOVES_NO_LESS_THAN_3}
                            [/and]
                        [/filter]
                    [/filter_adjacent_location]
                [/have_location]
            [/show_if]
            id=dig_cavewall
            description= _ "dig into this cave wall"
            image=misc/shovelicon.png
            [command]
                [sound]
                    name=mace.wav
                    repeat=3
                [/sound]

                [if]
                    [variable]
                        name=x1
                        equals=20
                    [/variable]
                    [and]
                        [variable]
                            name=y1
                            equals=12
                        [/variable]
                    [/and]
                    [or]
                        [variable]
                            name=x1
                            equals=21
                        [/variable]
                        [and]
                            [variable]
                                name=y1
                                equals=13
                            [/variable]
                        [/and]
                    [/or]
                    [or]
                        [variable]
                            name=x1
                            equals=12
                        [/variable]
                        [and]
                            [variable]
                                name=y1
                                equals=15
                            [/variable]
                        [/and]
                    [/or]
                    [then]
                        [terrain]
                            terrain=Uu^Br\
                            x,y=$x1,$y1
                        [/terrain]
                    [/then]
                    [else]
                        [if]
                            [variable]
                                name=x1
                                equals=19
                            [/variable]
                            [and]
                                [variable]
                                    name=y1
                                    equals=17
                                [/variable]
                            [/and]
                            [or]
                                [variable]
                                    name=x1
                                    equals=29
                                [/variable]
                                [and]
                                    [variable]
                                        name=y1
                                        equals=13
                                    [/variable]
                                [/and]
                            [/or]
                            [or]
                                [variable]
                                    name=x1
                                    equals=11
                                [/variable]
                                [and]
                                    [variable]
                                        name=y1
                                        equals=11
                                    [/variable]
                                [/and]
                            [/or]
                            [then]
                                [terrain]
                                    terrain=Uu^Br/
                                    x,y=$x1,$y1
                                [/terrain]
                            [/then]
                            [else]
                                [if]
                                    [variable]
                                        name=x1
                                        equals=7
                                    [/variable]
                                    [and]
                                        [variable]
                                            name=y1
                                            equals=14
                                        [/variable]
                                    [/and]
                                    [then]
                                        [terrain]
                                            terrain=Uu^Br|
                                            x,y=$x1,$y1
                                        [/terrain]
                                    [/then]
                                    [else]
                                        [terrain]
                                            terrain=Uu^Dr
                                            x,y=$x1,$y1
                                        [/terrain]
                                    [/else]
                                [/if]
                            [/else]
                        [/if]
                    [/else]
                [/if]

                # teleport the miner to the newly created cave
                [store_unit]
                    [filter]
                        side=$side_number
                        [and]
                            type=DoT_Dwarvish_Miner
                        [/and]
                        [and]
                            ability=dig
                        [/and]
                        [and]
                            {MOVES_NO_LESS_THAN_3}
                        [/and]
                        [filter_location]
                            [filter_adjacent_location]
                                x,y=$x1,$y1
                            [/filter_adjacent_location]
                        [/filter_location]
                    [/filter]
                    variable=miner
                    kill=yes
                [/store_unit]

                {VARIABLE miner.x $x1}
                {VARIABLE miner.y $y1}

                # drain moves? attacks? do whatever you want here.
                {VARIABLE miner.moves 0}
                {VARIABLE miner.attacks_left 0}

                # note that if more than one unit was adjacent the first stored is modified and all others just stay where they were
                {FOREACH miner i}
                    [unstore_unit]
                        variable=miner[$i]
                    [/unstore_unit]
                {NEXT i}

                [redraw]
                    clear_shroud=yes
                [/redraw]
                {CLEAR_VARIABLE miner}
            [/command]
        [/set_menu_item]
    [/event]
#enddef

# For AI Controller:
{./ai}
